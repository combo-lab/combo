{
  "version": 3,
  "sources": ["../../assets/src/html/index.js"],
  "sourcesContent": ["/**\n * Combo HTML\n *\n * It provides enhancements for HTML:\n *\n * - Support `data-confirm=\"message\"` attributes, which shows\n *   a confirmation modal with the given message.\n *\n * - Support `data-method=\"patch|post|put|delete\"` attributes,\n *   which sends the current click as a PATCH/POST/PUT/DELETE\n *   HTTP request. You will need to add `data-to` with the URL\n *   and `data-csrf` with the CSRF token value.\n *\n * - Dispatch a `combo.link.click` event, which provides a mechanism to\n *   customize the default behaviour above.\n *   Stopping propagation for this event will disable `data-confirm`.\n *   Prevent default behaviour for this event will disable `data-method`.\n *\n * ## Setup\n *\n * To use the functionality above, you must load code into your build tool:\n *\n * ```javascript\n * import html from \"combo/html\";\n *\n * html.init();\n * ```\n *\n * ## Customizing the default behaivour\n *\n * ### Customizing the `data-confirm` behaviour\n *\n * Intercept the `combo.link.click` event before it bubbling up to `window`\n * and do your own custom logic.\n *\n * For example, you could replace the default behavior using `window.confirm`\n * with a custom implementation based on [vex](https://github.com/HubSpot/vex):\n *\n * ```javascript\n * // Compared to window.confirm, the custom dialog does not block JavaScript\n * // execution. Therefore to make this work as expected we store the successful\n * // confirmation as an attribute and re-trigger the click event.\n *\n * // On the second click, the `data-confirm-resolved` attribute is set\n * // and we proceed.\n * const RESOLVED_ATTRIBUTE = \"data-confirm-resolved\";\n *\n * // listen on document.body, so it's executed before the default of\n * // html.init(), which is listening on the window object.\n * document.body.addEventListener(\n *   \"combo.link.click\",\n *   function (e) {\n *     // Prevent default implementation\n *     e.stopPropagation();\n *\n *     // Introduce alternative implementation\n *     const message = e.target.getAttribute(\"data-confirm\");\n *     if (!message) {\n *       return;\n *     }\n *\n *     // Confirm is resolved execute the click event\n *     if (e.target?.hasAttribute(RESOLVED_ATTRIBUTE)) {\n *       e.target.removeAttribute(RESOLVED_ATTRIBUTE);\n *       return;\n *     }\n *\n *     // Confirm is needed, preventDefault and show your modal\n *     e.preventDefault();\n *     e.target?.setAttribute(RESOLVED_ATTRIBUTE, \"\");\n *\n *     vex.dialog.confirm({\n *       message: message,\n *       callback: function (value) {\n *         if (value == true) {\n *           // Customer confirmed, re-trigger the click event.\n *           e.target?.click();\n *         } else {\n *           // Customer canceled\n *           e.target?.removeAttribute(RESOLVED_ATTRIBUTE);\n *         }\n *       },\n *     });\n *   },\n *   false,\n * );\n * ```\n *\n * ### Creating new custom behavior\n *\n * ```javascript\n * window.addEventListener(\n *   \"combo.link.click\",\n *   function (e) {\n *     // Introduce new behaviour\n *     var message = e.target.getAttribute(\"data-prompt\");\n *     var answer = e.target.getAttribute(\"data-prompt-answer\");\n *     if (message && answer && answer != window.prompt(message)) {\n *       e.preventDefault();\n *     }\n *   },\n *   false,\n * );\n * ```\n */\n\nfunction init() {\n  var PolyfillEvent = eventConstructor()\n\n  function eventConstructor() {\n    if (typeof window.CustomEvent === 'function') return window.CustomEvent\n    // IE<=9 Support\n    function CustomEvent(event, params) {\n      params = params || { bubbles: false, cancelable: false, detail: undefined }\n      var evt = document.createEvent('CustomEvent')\n      evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail)\n      return evt\n    }\n    CustomEvent.prototype = window.Event.prototype\n    return CustomEvent\n  }\n\n  function buildHiddenInput(name, value) {\n    var input = document.createElement('input')\n    input.type = 'hidden'\n    input.name = name\n    input.value = value\n    return input\n  }\n\n  function handleClick(element, targetModifierKey) {\n    var to = element.getAttribute('data-to'),\n      method = buildHiddenInput('_method', element.getAttribute('data-method')),\n      csrf = buildHiddenInput('_csrf_token', element.getAttribute('data-csrf')),\n      form = document.createElement('form'),\n      submit = document.createElement('input'),\n      target = element.getAttribute('target')\n\n    form.method = element.getAttribute('data-method') === 'get' ? 'get' : 'post'\n    form.action = to\n    form.style.display = 'none'\n\n    if (target) form.target = target\n    else if (targetModifierKey) form.target = '_blank'\n\n    form.appendChild(csrf)\n    form.appendChild(method)\n    document.body.appendChild(form)\n\n    // Insert a button and click it instead of using `form.submit`\n    // because the `submit` function does not emit a `submit` event.\n    submit.type = 'submit'\n    form.appendChild(submit)\n    submit.click()\n  }\n\n  window.addEventListener(\n    'click',\n    function (e) {\n      var element = e.target\n      if (e.defaultPrevented) return\n\n      while (element && element.getAttribute) {\n        var comboLinkEvent = new PolyfillEvent('combo.link.click', {\n          bubbles: true,\n          cancelable: true,\n        })\n\n        if (!element.dispatchEvent(comboLinkEvent)) {\n          e.preventDefault()\n          e.stopImmediatePropagation()\n          return false\n        }\n\n        if (element.getAttribute('data-method') && element.getAttribute('data-to')) {\n          handleClick(element, e.metaKey || e.shiftKey)\n          e.preventDefault()\n          return false\n        } else {\n          element = element.parentNode\n        }\n      }\n    },\n    false,\n  )\n\n  window.addEventListener(\n    'combo.link.click',\n    function (e) {\n      var message = e.target.getAttribute('data-confirm')\n      if (message && !window.confirm(message)) {\n        e.preventDefault()\n      }\n    },\n    false,\n  )\n}\n\nexport { init }\nexport default { init }\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AA0GA,WAAS,OAAO;AACd,QAAI,gBAAgB,iBAAiB;AAErC,aAAS,mBAAmB;AAC1B,UAAI,OAAO,OAAO,gBAAgB,WAAY,QAAO,OAAO;AAE5D,eAAS,YAAY,OAAO,QAAQ;AAClC,iBAAS,UAAU,EAAE,SAAS,OAAO,YAAY,OAAO,QAAQ,OAAU;AAC1E,YAAI,MAAM,SAAS,YAAY,aAAa;AAC5C,YAAI,gBAAgB,OAAO,OAAO,SAAS,OAAO,YAAY,OAAO,MAAM;AAC3E,eAAO;AAAA,MACT;AACA,kBAAY,YAAY,OAAO,MAAM;AACrC,aAAO;AAAA,IACT;AAEA,aAAS,iBAAiB,MAAM,OAAO;AACrC,UAAI,QAAQ,SAAS,cAAc,OAAO;AAC1C,YAAM,OAAO;AACb,YAAM,OAAO;AACb,YAAM,QAAQ;AACd,aAAO;AAAA,IACT;AAEA,aAAS,YAAY,SAAS,mBAAmB;AAC/C,UAAI,KAAK,QAAQ,aAAa,SAAS,GACrC,SAAS,iBAAiB,WAAW,QAAQ,aAAa,aAAa,CAAC,GACxE,OAAO,iBAAiB,eAAe,QAAQ,aAAa,WAAW,CAAC,GACxE,OAAO,SAAS,cAAc,MAAM,GACpC,SAAS,SAAS,cAAc,OAAO,GACvC,SAAS,QAAQ,aAAa,QAAQ;AAExC,WAAK,SAAS,QAAQ,aAAa,aAAa,MAAM,QAAQ,QAAQ;AACtE,WAAK,SAAS;AACd,WAAK,MAAM,UAAU;AAErB,UAAI,OAAQ,MAAK,SAAS;AAAA,eACjB,kBAAmB,MAAK,SAAS;AAE1C,WAAK,YAAY,IAAI;AACrB,WAAK,YAAY,MAAM;AACvB,eAAS,KAAK,YAAY,IAAI;AAI9B,aAAO,OAAO;AACd,WAAK,YAAY,MAAM;AACvB,aAAO,MAAM;AAAA,IACf;AAEA,WAAO;AAAA,MACL;AAAA,MACA,SAAU,GAAG;AACX,YAAI,UAAU,EAAE;AAChB,YAAI,EAAE,iBAAkB;AAExB,eAAO,WAAW,QAAQ,cAAc;AACtC,cAAI,iBAAiB,IAAI,cAAc,oBAAoB;AAAA,YACzD,SAAS;AAAA,YACT,YAAY;AAAA,UACd,CAAC;AAED,cAAI,CAAC,QAAQ,cAAc,cAAc,GAAG;AAC1C,cAAE,eAAe;AACjB,cAAE,yBAAyB;AAC3B,mBAAO;AAAA,UACT;AAEA,cAAI,QAAQ,aAAa,aAAa,KAAK,QAAQ,aAAa,SAAS,GAAG;AAC1E,wBAAY,SAAS,EAAE,WAAW,EAAE,QAAQ;AAC5C,cAAE,eAAe;AACjB,mBAAO;AAAA,UACT,OAAO;AACL,sBAAU,QAAQ;AAAA,UACpB;AAAA,QACF;AAAA,MACF;AAAA,MACA;AAAA,IACF;AAEA,WAAO;AAAA,MACL;AAAA,MACA,SAAU,GAAG;AACX,YAAI,UAAU,EAAE,OAAO,aAAa,cAAc;AAClD,YAAI,WAAW,CAAC,OAAO,QAAQ,OAAO,GAAG;AACvC,YAAE,eAAe;AAAA,QACnB;AAAA,MACF;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAGA,MAAO,eAAQ,EAAE,KAAK;",
  "names": []
}
