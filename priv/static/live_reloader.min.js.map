{
  "version": 3,
  "sources": ["../../assets/node_modules/lodash.debounce/index.js", "../../assets/src/live_reloader/index.js", "../../assets/src/socket/constants.js", "../../assets/src/socket/utils.js", "../../assets/src/socket/ajax.js", "../../assets/src/socket/push.js", "../../assets/src/socket/timer.js", "../../assets/src/socket/channel.js", "../../assets/src/socket/longpoll.js", "../../assets/src/socket/serializer.js", "../../assets/src/socket/socket.js"],
  "sourcesContent": ["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        result = wait - timeSinceLastCall;\n\n    return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = debounce;\n", "import { Socket } from '../socket'\nimport debounce from 'lodash.debounce'\n\nfunction getFreshUrl(url) {\n  const date = Math.round(Date.now() / 1000).toString()\n  const cleanUrl = url.replace(/(&|\\?)vsn=\\d*/, '')\n  const freshUrl = cleanUrl + (cleanUrl.includes('?') ? '&' : '?') + 'vsn=' + date\n  return freshUrl\n}\n\nfunction buildFreshImportUrl(style) {\n  const newStyle = document.createElement('style')\n  const onComplete = () => {\n    if (style.parentNode !== null) {\n      style.parentNode.removeChild(style)\n    }\n  }\n\n  const originalCSS = style.textContent || style.innerHTML\n  const freshCSS = originalCSS.replace(/@import\\s+(?:url\\()?['\"]?([^'\"\\)]+)['\"]?\\)?/g, (match, url) => {\n    const freshUrl = getFreshUrl(url)\n\n    if (match.includes('url(')) {\n      return `@import url(\"${freshUrl}\")`\n    } else {\n      return `@import \"${freshUrl}\"`\n    }\n  })\n\n  newStyle.onerror = onComplete\n  newStyle.onload = onComplete\n  style.setAttribute('data-pending-removal', '')\n  newStyle.setAttribute('type', 'text/css')\n  newStyle.textContent = freshCSS\n\n  style.parentNode.insertBefore(newStyle, style.nextSibling)\n  return newStyle\n}\n\nfunction buildFreshLinkUrl(link) {\n  const newLink = document.createElement('link')\n  const onComplete = () => {\n    if (link.parentNode !== null) {\n      link.parentNode.removeChild(link)\n    }\n  }\n\n  newLink.onerror = onComplete\n  newLink.onload = onComplete\n  link.setAttribute('data-pending-removal', '')\n  newLink.setAttribute('rel', 'stylesheet')\n  newLink.setAttribute('type', 'text/css')\n  newLink.setAttribute('href', getFreshUrl(link.href))\n  link.parentNode.insertBefore(newLink, link.nextSibling)\n  return newLink\n}\n\nfunction repaint() {\n  const browser = navigator.userAgent.toLowerCase()\n  if (browser.includes('chrome')) {\n    setTimeout(() => document.body.offsetHeight, 25)\n  }\n}\n\nfunction buildReloadStrategies(targetWindow, fullReloadOnCssChanges) {\n  const fullReloadTargetWindow = {\n    type: 'full_reload',\n    priority: 9,\n    fun: () => {\n      window[targetWindow].location.reload()\n    },\n  }\n\n  const hotReloadCSS = {\n    type: 'hot_reload',\n    priority: 1,\n    fun: () => {\n      const reloadableLinkElements = window.parent.document.querySelectorAll(\n        'link[rel=stylesheet]:not([data-no-reload]):not([data-pending-removal])',\n      )\n\n      Array.from(reloadableLinkElements)\n        .filter(link => link.href)\n        .forEach(link => buildFreshLinkUrl(link))\n\n      const reloadablestyles = window.parent.document.querySelectorAll(\n        'style:not([data-no-reload]):not([data-pending-removal])',\n      )\n\n      Array.from(reloadablestyles)\n        .filter(style => style.textContent.includes('@import'))\n        .forEach(style => buildFreshImportUrl(style))\n\n      repaint()\n    },\n  }\n\n  return {\n    css: fullReloadOnCssChanges ? fullReloadTargetWindow : hotReloadCSS,\n    __default__: fullReloadTargetWindow,\n  }\n}\n\nclass LiveReloader {\n  constructor(path, debounceTime, targetWindow, fullReloadOnCssChanges) {\n    this.enabledOnce = false\n    this.reloadQueue = []\n\n    this.socket = new Socket(path)\n    this.debouncedReload = debounce(this.reload, debounceTime)\n    this.reloadStrategies = buildReloadStrategies(targetWindow, fullReloadOnCssChanges)\n\n    this.channel = this.socket.channel('combo:live_reload', {})\n    this.socket.onOpen(() => {\n      if (this.enabledOnce) {\n        return\n      } else {\n        this.enabledOnce = true\n      }\n\n      if (['complete', 'loaded', 'interactive'].includes(parent.document.readyState)) {\n        this.dispatchConnected()\n      } else {\n        parent.addEventListener('load', () => this.dispatchConnected())\n      }\n    })\n    this.channel.on('reload', (msg) => {\n      const { type: type } = msg\n      this.scheduleReload(type)\n    })\n  }\n\n  enable() {\n    this.channel.join()\n    this.socket.connect()\n  }\n\n  disable() {\n    this.channel.leave()\n    this.socket.disconnect()\n\n    this.enabledOnce = false\n    this.reloadQueue = []\n  }\n\n  dispatchConnected() {\n    parent.dispatchEvent(new CustomEvent('combo:live_reloader:connected', { detail: this }))\n  }\n\n  scheduleReload(type) {\n    this.reloadQueue.push(type)\n    this.debouncedReload()\n  }\n\n  reload() {\n    const reloadStrategies = this.reloadQueue.map(type => this.getReloadStrategy(type))\n    const finalReloadStrategy = reloadStrategies.reduce((acc, current) => {\n      return current.priority > acc.priority ? current : acc\n    })\n\n    const { type: reload_type, fun: reload_fun } = finalReloadStrategy\n    if (reload_type == 'full_reload') {\n      this.channel.off('reload')\n    }\n    reload_fun()\n\n    this.reloadQueue = []\n  }\n\n  getReloadStrategy(type) {\n    return this.reloadStrategies[type] || this.reloadStrategies.__default__\n  }\n}\n\nexport default LiveReloader\n", "export const globalSelf = typeof self !== 'undefined' ? self : null\nexport const comboWindow = typeof window !== 'undefined' ? window : null\nexport const global = globalSelf || comboWindow || globalThis\nexport const DEFAULT_VSN = '2.0.0'\nexport const SOCKET_STATES = { connecting: 0, open: 1, closing: 2, closed: 3 }\nexport const DEFAULT_TIMEOUT = 10000\nexport const WS_CLOSE_NORMAL = 1000\nexport const CHANNEL_STATES = {\n  closed: 'closed',\n  errored: 'errored',\n  joined: 'joined',\n  joining: 'joining',\n  leaving: 'leaving',\n}\nexport const CHANNEL_EVENTS = {\n  close: 'phx_close',\n  error: 'phx_error',\n  join: 'phx_join',\n  reply: 'phx_reply',\n  leave: 'phx_leave',\n}\n\nexport const TRANSPORTS = {\n  longpoll: 'longpoll',\n  websocket: 'websocket',\n}\nexport const XHR_STATES = {\n  complete: 4,\n}\nexport const AUTH_TOKEN_PREFIX = 'base64url.bearer.combo.'\n", "// wraps value in closure or returns closure\nexport let closure = (value) => {\n  if (typeof value === 'function') {\n    return value\n  } else {\n    let closure = function () {\n      return value\n    }\n    return closure\n  }\n}\n", "import { global, XHR_STATES } from './constants'\n\nexport default class Ajax {\n  static request(method, endPoint, headers, body, timeout, ontimeout, callback) {\n    if (global.XDomainRequest) {\n      let req = new global.XDomainRequest() // IE8, IE9\n      return this.xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback)\n    } else if (global.XMLHttpRequest) {\n      let req = new global.XMLHttpRequest() // IE7+, Firefox, Chrome, Opera, Safari\n      return this.xhrRequest(req, method, endPoint, headers, body, timeout, ontimeout, callback)\n    } else if (global.fetch && global.AbortController) {\n      // Fetch with AbortController for modern browsers\n      return this.fetchRequest(method, endPoint, headers, body, timeout, ontimeout, callback)\n    } else {\n      throw new Error('No suitable XMLHttpRequest implementation found')\n    }\n  }\n\n  static fetchRequest(method, endPoint, headers, body, timeout, ontimeout, callback) {\n    let options = {\n      method,\n      headers,\n      body,\n    }\n    let controller = null\n    if (timeout) {\n      controller = new AbortController()\n      const _timeoutId = setTimeout(() => controller.abort(), timeout)\n      options.signal = controller.signal\n    }\n    global\n      .fetch(endPoint, options)\n      .then(response => response.text())\n      .then(data => this.parseJSON(data))\n      .then(data => callback && callback(data))\n      .catch((err) => {\n        if (err.name === 'AbortError' && ontimeout) {\n          ontimeout()\n        } else {\n          callback && callback(null)\n        }\n      })\n    return controller\n  }\n\n  static xdomainRequest(req, method, endPoint, body, timeout, ontimeout, callback) {\n    req.timeout = timeout\n    req.open(method, endPoint)\n    req.onload = () => {\n      let response = this.parseJSON(req.responseText)\n      callback && callback(response)\n    }\n    if (ontimeout) {\n      req.ontimeout = ontimeout\n    }\n\n    // Work around bug in IE9 that requires an attached onprogress handler\n    req.onprogress = () => {}\n\n    req.send(body)\n    return req\n  }\n\n  static xhrRequest(req, method, endPoint, headers, body, timeout, ontimeout, callback) {\n    req.open(method, endPoint, true)\n    req.timeout = timeout\n    for (let [key, value] of Object.entries(headers)) {\n      req.setRequestHeader(key, value)\n    }\n    req.onerror = () => callback && callback(null)\n    req.onreadystatechange = () => {\n      if (req.readyState === XHR_STATES.complete && callback) {\n        let response = this.parseJSON(req.responseText)\n        callback(response)\n      }\n    }\n    if (ontimeout) {\n      req.ontimeout = ontimeout\n    }\n\n    req.send(body)\n    return req\n  }\n\n  static parseJSON(resp) {\n    if (!resp || resp === '') {\n      return null\n    }\n\n    try {\n      return JSON.parse(resp)\n    } catch {\n      console && console.log('failed to parse JSON response', resp)\n      return null\n    }\n  }\n\n  static serialize(obj, parentKey) {\n    let queryStr = []\n    for (var key in obj) {\n      if (!Object.prototype.hasOwnProperty.call(obj, key)) {\n        continue\n      }\n      let paramKey = parentKey ? `${parentKey}[${key}]` : key\n      let paramVal = obj[key]\n      if (typeof paramVal === 'object') {\n        queryStr.push(this.serialize(paramVal, paramKey))\n      } else {\n        queryStr.push(encodeURIComponent(paramKey) + '=' + encodeURIComponent(paramVal))\n      }\n    }\n    return queryStr.join('&')\n  }\n\n  static appendParams(url, params) {\n    if (Object.keys(params).length === 0) {\n      return url\n    }\n\n    let prefix = url.match(/\\?/) ? '&' : '?'\n    return `${url}${prefix}${this.serialize(params)}`\n  }\n}\n", "/**\n * Initializes the Push\n * @param {Channel} channel - The Channel\n * @param {string} event - The event, for example `\"phx_join\"`\n * @param {Object} payload - The payload, for example `{user_id: 123}`\n * @param {number} timeout - The push timeout in milliseconds\n */\nexport default class Push {\n  constructor(channel, event, payload, timeout) {\n    this.channel = channel\n    this.event = event\n    this.payload\n      = payload\n        || function () {\n          return {}\n        }\n    this.receivedResp = null\n    this.timeout = timeout\n    this.timeoutTimer = null\n    this.recHooks = []\n    this.sent = false\n  }\n\n  /**\n   *\n   * @param {number} timeout\n   */\n  resend(timeout) {\n    this.timeout = timeout\n    this.reset()\n    this.send()\n  }\n\n  /**\n   *\n   */\n  send() {\n    if (this.hasReceived('timeout')) {\n      return\n    }\n    this.startTimeout()\n    this.sent = true\n    this.channel.socket.push({\n      topic: this.channel.topic,\n      event: this.event,\n      payload: this.payload(),\n      ref: this.ref,\n      join_ref: this.channel.joinRef(),\n    })\n  }\n\n  /**\n   *\n   * @param {*} status\n   * @param {*} callback\n   */\n  receive(status, callback) {\n    if (this.hasReceived(status)) {\n      callback(this.receivedResp.response)\n    }\n\n    this.recHooks.push({ status, callback })\n    return this\n  }\n\n  /**\n   * @private\n   */\n  reset() {\n    this.cancelRefEvent()\n    this.ref = null\n    this.refEvent = null\n    this.receivedResp = null\n    this.sent = false\n  }\n\n  /**\n   * @private\n   */\n  matchReceive({ status, response, _ref }) {\n    this.recHooks.filter(h => h.status === status).forEach(h => h.callback(response))\n  }\n\n  /**\n   * @private\n   */\n  cancelRefEvent() {\n    if (!this.refEvent) {\n      return\n    }\n    this.channel.off(this.refEvent)\n  }\n\n  /**\n   * @private\n   */\n  cancelTimeout() {\n    clearTimeout(this.timeoutTimer)\n    this.timeoutTimer = null\n  }\n\n  /**\n   * @private\n   */\n  startTimeout() {\n    if (this.timeoutTimer) {\n      this.cancelTimeout()\n    }\n    this.ref = this.channel.socket.makeRef()\n    this.refEvent = this.channel.replyEventName(this.ref)\n\n    this.channel.on(this.refEvent, (payload) => {\n      this.cancelRefEvent()\n      this.cancelTimeout()\n      this.receivedResp = payload\n      this.matchReceive(payload)\n    })\n\n    this.timeoutTimer = setTimeout(() => {\n      this.trigger('timeout', {})\n    }, this.timeout)\n  }\n\n  /**\n   * @private\n   */\n  hasReceived(status) {\n    return this.receivedResp && this.receivedResp.status === status\n  }\n\n  /**\n   * @private\n   */\n  trigger(status, response) {\n    this.channel.trigger(this.refEvent, { status, response })\n  }\n}\n", "/**\n *\n * Creates a timer that accepts a `timerCalc` function to perform\n * calculated timeout retries, such as exponential backoff.\n *\n * @example\n * let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *   return [1000, 5000, 10000][tries - 1] || 10000\n * })\n * reconnectTimer.scheduleTimeout() // fires after 1000\n * reconnectTimer.scheduleTimeout() // fires after 5000\n * reconnectTimer.reset()\n * reconnectTimer.scheduleTimeout() // fires after 1000\n *\n * @param {Function} callback\n * @param {Function} timerCalc\n */\nexport default class Timer {\n  constructor(callback, timerCalc) {\n    this.callback = callback\n    this.timerCalc = timerCalc\n    this.timer = null\n    this.tries = 0\n  }\n\n  reset() {\n    this.tries = 0\n    clearTimeout(this.timer)\n  }\n\n  /**\n   * Cancels any previous scheduleTimeout and schedules callback\n   */\n  scheduleTimeout() {\n    clearTimeout(this.timer)\n\n    this.timer = setTimeout(\n      () => {\n        this.tries = this.tries + 1\n        this.callback()\n      },\n      this.timerCalc(this.tries + 1),\n    )\n  }\n}\n", "import { closure } from './utils'\nimport { CHANNEL_EVENTS, CHANNEL_STATES } from './constants'\n\nimport Push from './push'\nimport Timer from './timer'\n\n/**\n *\n * @param {string} topic\n * @param {(Object|function)} params\n * @param {Socket} socket\n */\nexport default class Channel {\n  constructor(topic, params, socket) {\n    this.state = CHANNEL_STATES.closed\n    this.topic = topic\n    this.params = closure(params || {})\n    this.socket = socket\n    this.bindings = []\n    this.bindingRef = 0\n    this.timeout = this.socket.timeout\n    this.joinedOnce = false\n    this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout)\n    this.pushBuffer = []\n    this.stateChangeRefs = []\n\n    this.rejoinTimer = new Timer(() => {\n      if (this.socket.isConnected()) {\n        this.rejoin()\n      }\n    }, this.socket.rejoinAfterMs)\n    this.stateChangeRefs.push(this.socket.onError(() => this.rejoinTimer.reset()))\n    this.stateChangeRefs.push(\n      this.socket.onOpen(() => {\n        this.rejoinTimer.reset()\n        if (this.isErrored()) {\n          this.rejoin()\n        }\n      }),\n    )\n    this.joinPush.receive('ok', () => {\n      this.state = CHANNEL_STATES.joined\n      this.rejoinTimer.reset()\n      this.pushBuffer.forEach(pushEvent => pushEvent.send())\n      this.pushBuffer = []\n    })\n    this.joinPush.receive('error', () => {\n      this.state = CHANNEL_STATES.errored\n      if (this.socket.isConnected()) {\n        this.rejoinTimer.scheduleTimeout()\n      }\n    })\n    this.onClose(() => {\n      this.rejoinTimer.reset()\n      if (this.socket.hasLogger())\n        this.socket.log('channel', `close ${this.topic} ${this.joinRef()}`)\n      this.state = CHANNEL_STATES.closed\n      this.socket.remove(this)\n    })\n    this.onError((reason) => {\n      if (this.socket.hasLogger()) this.socket.log('channel', `error ${this.topic}`, reason)\n      if (this.isJoining()) {\n        this.joinPush.reset()\n      }\n      this.state = CHANNEL_STATES.errored\n      if (this.socket.isConnected()) {\n        this.rejoinTimer.scheduleTimeout()\n      }\n    })\n    this.joinPush.receive('timeout', () => {\n      if (this.socket.hasLogger())\n        this.socket.log(\n          'channel',\n          `timeout ${this.topic} (${this.joinRef()})`,\n          this.joinPush.timeout,\n        )\n      let leavePush = new Push(this, CHANNEL_EVENTS.leave, closure({}), this.timeout)\n      leavePush.send()\n      this.state = CHANNEL_STATES.errored\n      this.joinPush.reset()\n      if (this.socket.isConnected()) {\n        this.rejoinTimer.scheduleTimeout()\n      }\n    })\n    this.on(CHANNEL_EVENTS.reply, (payload, ref) => {\n      this.trigger(this.replyEventName(ref), payload)\n    })\n  }\n\n  /**\n   * Join the channel\n   * @param {integer} timeout\n   * @returns {Push}\n   */\n  join(timeout = this.timeout) {\n    if (this.joinedOnce) {\n      throw new Error(\n        'tried to join multiple times. \\'join\\' can only be called a single time per channel instance',\n      )\n    } else {\n      this.timeout = timeout\n      this.joinedOnce = true\n      this.rejoin()\n      return this.joinPush\n    }\n  }\n\n  /**\n   * Hook into channel close\n   * @param {Function} callback\n   */\n  onClose(callback) {\n    this.on(CHANNEL_EVENTS.close, callback)\n  }\n\n  /**\n   * Hook into channel errors\n   * @param {Function} callback\n   */\n  onError(callback) {\n    return this.on(CHANNEL_EVENTS.error, reason => callback(reason))\n  }\n\n  /**\n   * Subscribes on channel events\n   *\n   * Subscription returns a ref counter, which can be used later to\n   * unsubscribe the exact event listener\n   *\n   * @example\n   * const ref1 = channel.on(\"event\", do_stuff)\n   * const ref2 = channel.on(\"event\", do_other_stuff)\n   * channel.off(\"event\", ref1)\n   * // Since unsubscription, do_stuff won't fire,\n   * // while do_other_stuff will keep firing on the \"event\"\n   *\n   * @param {string} event\n   * @param {Function} callback\n   * @returns {integer} ref\n   */\n  on(event, callback) {\n    let ref = this.bindingRef++\n    this.bindings.push({ event, ref, callback })\n    return ref\n  }\n\n  /**\n   * Unsubscribes off of channel events\n   *\n   * Use the ref returned from a channel.on() to unsubscribe one\n   * handler, or pass nothing for the ref to unsubscribe all\n   * handlers for the given event.\n   *\n   * @example\n   * // Unsubscribe the do_stuff handler\n   * const ref1 = channel.on(\"event\", do_stuff)\n   * channel.off(\"event\", ref1)\n   *\n   * // Unsubscribe all handlers from event\n   * channel.off(\"event\")\n   *\n   * @param {string} event\n   * @param {integer} ref\n   */\n  off(event, ref) {\n    this.bindings = this.bindings.filter((bind) => {\n      return !(bind.event === event && (typeof ref === 'undefined' || ref === bind.ref))\n    })\n  }\n\n  /**\n   * @private\n   */\n  canPush() {\n    return this.socket.isConnected() && this.isJoined()\n  }\n\n  /**\n   * Sends a message `event` to server with the payload `payload`.\n   * Server receives this in the `handle_in(event, payload, socket)`\n   * function. if server replies or it times out (default 10000ms),\n   * then optionally the reply can be received.\n   *\n   * @example\n   * channel.push(\"event\")\n   *   .receive(\"ok\", payload => console.log(\"server replied:\", payload))\n   *   .receive(\"error\", err => console.log(\"server errored\", err))\n   *   .receive(\"timeout\", () => console.log(\"timed out pushing\"))\n   * @param {string} event\n   * @param {Object} payload\n   * @param {number} [timeout]\n   * @returns {Push}\n   */\n  push(event, payload, timeout = this.timeout) {\n    payload = payload || {}\n    if (!this.joinedOnce) {\n      throw new Error(\n        `tried to push '${event}' to '${this.topic}' before joining. Use channel.join() before pushing events`,\n      )\n    }\n    let pushEvent = new Push(\n      this,\n      event,\n      function () {\n        return payload\n      },\n      timeout,\n    )\n    if (this.canPush()) {\n      pushEvent.send()\n    } else {\n      pushEvent.startTimeout()\n      this.pushBuffer.push(pushEvent)\n    }\n\n    return pushEvent\n  }\n\n  /** Leaves the channel\n   *\n   * Unsubscribes from server events, and\n   * instructs channel to terminate on server\n   *\n   * Triggers onClose() hooks\n   *\n   * To receive leave acknowledgements, use the `receive`\n   * hook to bind to the server ack, ie:\n   *\n   * @example\n   * channel.leave().receive(\"ok\", () => alert(\"left!\") )\n   *\n   * @param {integer} timeout\n   * @returns {Push}\n   */\n  leave(timeout = this.timeout) {\n    this.rejoinTimer.reset()\n    this.joinPush.cancelTimeout()\n\n    this.state = CHANNEL_STATES.leaving\n    let onClose = () => {\n      if (this.socket.hasLogger()) this.socket.log('channel', `leave ${this.topic}`)\n      this.trigger(CHANNEL_EVENTS.close, 'leave')\n    }\n    let leavePush = new Push(this, CHANNEL_EVENTS.leave, closure({}), timeout)\n    leavePush.receive('ok', () => onClose()).receive('timeout', () => onClose())\n    leavePush.send()\n    if (!this.canPush()) {\n      leavePush.trigger('ok', {})\n    }\n\n    return leavePush\n  }\n\n  /**\n   * Overridable message hook\n   *\n   * Receives all events for specialized message handling\n   * before dispatching to the channel callbacks.\n   *\n   * Must return the payload, modified or unmodified\n   * @param {string} event\n   * @param {Object} payload\n   * @param {integer} ref\n   * @returns {Object}\n   */\n  onMessage(_event, payload, _ref) {\n    return payload\n  }\n\n  /**\n   * @private\n   */\n  isMember(topic, event, payload, joinRef) {\n    if (this.topic !== topic) {\n      return false\n    }\n\n    if (joinRef && joinRef !== this.joinRef()) {\n      if (this.socket.hasLogger())\n        this.socket.log('channel', 'dropping outdated message', {\n          topic,\n          event,\n          payload,\n          joinRef,\n        })\n      return false\n    } else {\n      return true\n    }\n  }\n\n  /**\n   * @private\n   */\n  joinRef() {\n    return this.joinPush.ref\n  }\n\n  /**\n   * @private\n   */\n  rejoin(timeout = this.timeout) {\n    if (this.isLeaving()) {\n      return\n    }\n    this.socket.leaveOpenTopic(this.topic)\n    this.state = CHANNEL_STATES.joining\n    this.joinPush.resend(timeout)\n  }\n\n  /**\n   * @private\n   */\n  trigger(event, payload, ref, joinRef) {\n    let handledPayload = this.onMessage(event, payload, ref, joinRef)\n    if (payload && !handledPayload) {\n      throw new Error(\n        'channel onMessage callbacks must return the payload, modified or unmodified',\n      )\n    }\n\n    let eventBindings = this.bindings.filter(bind => bind.event === event)\n\n    for (let i = 0; i < eventBindings.length; i++) {\n      let bind = eventBindings[i]\n      bind.callback(handledPayload, ref, joinRef || this.joinRef())\n    }\n  }\n\n  /**\n   * @private\n   */\n  replyEventName(ref) {\n    return `chan_reply_${ref}`\n  }\n\n  /**\n   * @private\n   */\n  isClosed() {\n    return this.state === CHANNEL_STATES.closed\n  }\n\n  /**\n   * @private\n   */\n  isErrored() {\n    return this.state === CHANNEL_STATES.errored\n  }\n\n  /**\n   * @private\n   */\n  isJoined() {\n    return this.state === CHANNEL_STATES.joined\n  }\n\n  /**\n   * @private\n   */\n  isJoining() {\n    return this.state === CHANNEL_STATES.joining\n  }\n\n  /**\n   * @private\n   */\n  isLeaving() {\n    return this.state === CHANNEL_STATES.leaving\n  }\n}\n", "import { SOCKET_STATES, TRANSPORTS, AUTH_TOKEN_PREFIX } from './constants'\n\nimport Ajax from './ajax'\n\nlet arrayBufferToBase64 = (buffer) => {\n  let binary = ''\n  let bytes = new Uint8Array(buffer)\n  let len = bytes.byteLength\n  for (let i = 0; i < len; i++) {\n    binary += String.fromCharCode(bytes[i])\n  }\n  return btoa(binary)\n}\n\nexport default class LongPoll {\n  constructor(endPoint, protocols) {\n    // we only support subprotocols for authToken\n    // [\"combo\", \"base64url.bearer.combo.BASE64_ENCODED_TOKEN\"]\n    if (protocols && protocols.length === 2 && protocols[1].startsWith(AUTH_TOKEN_PREFIX)) {\n      this.authToken = atob(protocols[1].slice(AUTH_TOKEN_PREFIX.length))\n    }\n    this.endPoint = null\n    this.token = null\n    this.skipHeartbeat = true\n    this.reqs = new Set()\n    this.awaitingBatchAck = false\n    this.currentBatch = null\n    this.currentBatchTimer = null\n    this.batchBuffer = []\n    this.onopen = function () {} // noop\n    this.onerror = function () {} // noop\n    this.onmessage = function () {} // noop\n    this.onclose = function () {} // noop\n    this.pollEndpoint = this.normalizeEndpoint(endPoint)\n    this.readyState = SOCKET_STATES.connecting\n    // we must wait for the caller to finish setting up our callbacks and timeout properties\n    setTimeout(() => this.poll(), 0)\n  }\n\n  normalizeEndpoint(endPoint) {\n    return endPoint\n      .replace('ws://', 'http://')\n      .replace('wss://', 'https://')\n      .replace(new RegExp('(.*)/' + TRANSPORTS.websocket), '$1/' + TRANSPORTS.longpoll)\n  }\n\n  endpointURL() {\n    return Ajax.appendParams(this.pollEndpoint, { token: this.token })\n  }\n\n  closeAndRetry(code, reason, wasClean) {\n    this.close(code, reason, wasClean)\n    this.readyState = SOCKET_STATES.connecting\n  }\n\n  ontimeout() {\n    this.onerror('timeout')\n    this.closeAndRetry(1005, 'timeout', false)\n  }\n\n  isActive() {\n    return this.readyState === SOCKET_STATES.open || this.readyState === SOCKET_STATES.connecting\n  }\n\n  poll() {\n    const headers = { Accept: 'application/json' }\n    if (this.authToken) {\n      headers['X-Combo-AuthToken'] = this.authToken\n    }\n    this.ajax(\n      'GET',\n      headers,\n      null,\n      () => this.ontimeout(),\n      (resp) => {\n        if (resp) {\n          var { status, token, messages } = resp\n          this.token = token\n        } else {\n          status = 0\n        }\n\n        switch (status) {\n          case 200:\n            messages.forEach((msg) => {\n              // Tasks are what things like event handlers, setTimeout callbacks,\n              // promise resolves and more are run within.\n              // In modern browsers, there are two different kinds of tasks,\n              // microtasks and macrotasks.\n              // Microtasks are mainly used for Promises, while macrotasks are\n              // used for everything else.\n              // Microtasks always have priority over macrotasks. If the JS engine\n              // is looking for a task to run, it will always try to empty the\n              // microtask queue before attempting to run anything from the\n              // macrotask queue.\n              //\n              // For the WebSocket transport, messages always arrive in their own\n              // event. This means that if any promises are resolved from within,\n              // their callbacks will always finish execution by the time the\n              // next message event handler is run.\n              //\n              // In order to emulate this behaviour, we need to make sure each\n              // onmessage handler is run within its own macrotask.\n              setTimeout(() => this.onmessage({ data: msg }), 0)\n            })\n            this.poll()\n            break\n          case 204:\n            this.poll()\n            break\n          case 410:\n            this.readyState = SOCKET_STATES.open\n            this.onopen({})\n            this.poll()\n            break\n          case 403:\n            this.onerror(403)\n            this.close(1008, 'forbidden', false)\n            break\n          case 0:\n          case 500:\n            this.onerror(500)\n            this.closeAndRetry(1011, 'internal server error', 500)\n            break\n          default:\n            throw new Error(`unhandled poll status ${status}`)\n        }\n      },\n    )\n  }\n\n  // we collect all pushes within the current event loop by\n  // setTimeout 0, which optimizes back-to-back procedural\n  // pushes against an empty buffer\n\n  send(body) {\n    if (typeof body !== 'string') {\n      body = arrayBufferToBase64(body)\n    }\n    if (this.currentBatch) {\n      this.currentBatch.push(body)\n    } else if (this.awaitingBatchAck) {\n      this.batchBuffer.push(body)\n    } else {\n      this.currentBatch = [body]\n      this.currentBatchTimer = setTimeout(() => {\n        this.batchSend(this.currentBatch)\n        this.currentBatch = null\n      }, 0)\n    }\n  }\n\n  batchSend(messages) {\n    this.awaitingBatchAck = true\n    this.ajax(\n      'POST',\n      { 'Content-Type': 'application/x-ndjson' },\n      messages.join('\\n'),\n      () => this.onerror('timeout'),\n      (resp) => {\n        this.awaitingBatchAck = false\n        if (!resp || resp.status !== 200) {\n          this.onerror(resp && resp.status)\n          this.closeAndRetry(1011, 'internal server error', false)\n        } else if (this.batchBuffer.length > 0) {\n          this.batchSend(this.batchBuffer)\n          this.batchBuffer = []\n        }\n      },\n    )\n  }\n\n  close(code, reason, wasClean) {\n    for (let req of this.reqs) {\n      req.abort()\n    }\n    this.readyState = SOCKET_STATES.closed\n    let opts = Object.assign(\n      { code: 1000, reason: undefined, wasClean: true },\n      { code, reason, wasClean },\n    )\n    this.batchBuffer = []\n    clearTimeout(this.currentBatchTimer)\n    this.currentBatchTimer = null\n    if (typeof CloseEvent !== 'undefined') {\n      this.onclose(new CloseEvent('close', opts))\n    } else {\n      this.onclose(opts)\n    }\n  }\n\n  ajax(method, headers, body, onCallerTimeout, callback) {\n    let req\n    let ontimeout = () => {\n      this.reqs.delete(req)\n      onCallerTimeout()\n    }\n    req = Ajax.request(\n      method,\n      this.endpointURL(),\n      headers,\n      body,\n      this.timeout,\n      ontimeout,\n      (resp) => {\n        this.reqs.delete(req)\n        if (this.isActive()) {\n          callback(resp)\n        }\n      },\n    )\n    this.reqs.add(req)\n  }\n}\n", "/* The default serializer for encoding and decoding messages */\nimport { CHANNEL_EVENTS } from './constants'\n\nexport default {\n  HEADER_LENGTH: 1,\n  META_LENGTH: 4,\n  KINDS: { push: 0, reply: 1, broadcast: 2 },\n\n  encode(msg, callback) {\n    if (msg.payload.constructor === ArrayBuffer) {\n      return callback(this.binaryEncode(msg))\n    } else {\n      let payload = [msg.join_ref, msg.ref, msg.topic, msg.event, msg.payload]\n      return callback(JSON.stringify(payload))\n    }\n  },\n\n  decode(rawPayload, callback) {\n    if (rawPayload.constructor === ArrayBuffer) {\n      return callback(this.binaryDecode(rawPayload))\n    } else {\n      let [join_ref, ref, topic, event, payload] = JSON.parse(rawPayload)\n      return callback({ join_ref, ref, topic, event, payload })\n    }\n  },\n\n  // private\n\n  binaryEncode(message) {\n    let { join_ref, ref, event, topic, payload } = message\n    let metaLength = this.META_LENGTH + join_ref.length + ref.length + topic.length + event.length\n    let header = new ArrayBuffer(this.HEADER_LENGTH + metaLength)\n    let view = new DataView(header)\n    let offset = 0\n\n    view.setUint8(offset++, this.KINDS.push) // kind\n    view.setUint8(offset++, join_ref.length)\n    view.setUint8(offset++, ref.length)\n    view.setUint8(offset++, topic.length)\n    view.setUint8(offset++, event.length)\n    Array.from(join_ref, char => view.setUint8(offset++, char.charCodeAt(0)))\n    Array.from(ref, char => view.setUint8(offset++, char.charCodeAt(0)))\n    Array.from(topic, char => view.setUint8(offset++, char.charCodeAt(0)))\n    Array.from(event, char => view.setUint8(offset++, char.charCodeAt(0)))\n\n    var combined = new Uint8Array(header.byteLength + payload.byteLength)\n    combined.set(new Uint8Array(header), 0)\n    combined.set(new Uint8Array(payload), header.byteLength)\n\n    return combined.buffer\n  },\n\n  binaryDecode(buffer) {\n    let view = new DataView(buffer)\n    let kind = view.getUint8(0)\n    let decoder = new TextDecoder()\n    switch (kind) {\n      case this.KINDS.push:\n        return this.decodePush(buffer, view, decoder)\n      case this.KINDS.reply:\n        return this.decodeReply(buffer, view, decoder)\n      case this.KINDS.broadcast:\n        return this.decodeBroadcast(buffer, view, decoder)\n    }\n  },\n\n  decodePush(buffer, view, decoder) {\n    let joinRefSize = view.getUint8(1)\n    let topicSize = view.getUint8(2)\n    let eventSize = view.getUint8(3)\n    let offset = this.HEADER_LENGTH + this.META_LENGTH - 1 // pushes have no ref\n    let joinRef = decoder.decode(buffer.slice(offset, offset + joinRefSize))\n    offset = offset + joinRefSize\n    let topic = decoder.decode(buffer.slice(offset, offset + topicSize))\n    offset = offset + topicSize\n    let event = decoder.decode(buffer.slice(offset, offset + eventSize))\n    offset = offset + eventSize\n    let data = buffer.slice(offset, buffer.byteLength)\n    return { join_ref: joinRef, ref: null, topic: topic, event: event, payload: data }\n  },\n\n  decodeReply(buffer, view, decoder) {\n    let joinRefSize = view.getUint8(1)\n    let refSize = view.getUint8(2)\n    let topicSize = view.getUint8(3)\n    let eventSize = view.getUint8(4)\n    let offset = this.HEADER_LENGTH + this.META_LENGTH\n    let joinRef = decoder.decode(buffer.slice(offset, offset + joinRefSize))\n    offset = offset + joinRefSize\n    let ref = decoder.decode(buffer.slice(offset, offset + refSize))\n    offset = offset + refSize\n    let topic = decoder.decode(buffer.slice(offset, offset + topicSize))\n    offset = offset + topicSize\n    let event = decoder.decode(buffer.slice(offset, offset + eventSize))\n    offset = offset + eventSize\n    let data = buffer.slice(offset, buffer.byteLength)\n    let payload = { status: event, response: data }\n    return {\n      join_ref: joinRef,\n      ref: ref,\n      topic: topic,\n      event: CHANNEL_EVENTS.reply,\n      payload: payload,\n    }\n  },\n\n  decodeBroadcast(buffer, view, decoder) {\n    let topicSize = view.getUint8(1)\n    let eventSize = view.getUint8(2)\n    let offset = this.HEADER_LENGTH + 2\n    let topic = decoder.decode(buffer.slice(offset, offset + topicSize))\n    offset = offset + topicSize\n    let event = decoder.decode(buffer.slice(offset, offset + eventSize))\n    offset = offset + eventSize\n    let data = buffer.slice(offset, buffer.byteLength)\n\n    return { join_ref: null, ref: null, topic: topic, event: event, payload: data }\n  },\n}\n", "import {\n  global,\n  comboWindow,\n  CHANNEL_EVENTS,\n  DEFAULT_TIMEOUT,\n  DEFAULT_VSN,\n  SOCKET_STATES,\n  TRANSPORTS,\n  WS_CLOSE_NORMAL,\n  AUTH_TOKEN_PREFIX,\n} from './constants'\n\nimport { closure } from './utils'\n\nimport Ajax from './ajax'\nimport Channel from './channel'\nimport LongPoll from './longpoll'\nimport Serializer from './serializer'\nimport Timer from './timer'\n\n/** Initializes the Socket *\n *\n * For IE8 support use an ES5-shim (https://github.com/es-shims/es5-shim)\n *\n * @param {string} endPoint - The string WebSocket endpoint, ie, `\"ws://example.com/socket\"`,\n *                                               `\"wss://example.com\"`\n *                                               `\"/socket\"` (inherited host & protocol)\n * @param {Object} [opts] - Optional configuration\n * @param {Function} [opts.transport] - The transport, for example WebSocket or LongPoll.\n *\n * Defaults to WebSocket with automatic LongPoll fallback if WebSocket is not defined.\n * To fallback to LongPoll when WebSocket attempts fail, use `longPollFallbackMs: 2500`.\n *\n * @param {number} [opts.longPollFallbackMs] - The millisecond time to attempt the primary transport\n * before falling back to the LongPoll transport. Disabled by default.\n *\n * @param {boolean} [opts.debug] - When true, enables debug logging. Default false.\n *\n * @param {Function} [opts.encode] - The function to encode outgoing messages.\n *\n * Defaults to JSON encoder.\n *\n * @param {Function} [opts.decode] - The function to decode incoming messages.\n *\n * Defaults to JSON:\n *\n * ```javascript\n * (payload, callback) => callback(JSON.parse(payload))\n * ```\n *\n * @param {number} [opts.timeout] - The default timeout in milliseconds to trigger push timeouts.\n *\n * Defaults `DEFAULT_TIMEOUT`\n * @param {number} [opts.heartbeatIntervalMs] - The millisec interval to send a heartbeat message\n * @param {Function} [opts.reconnectAfterMs] - The optional function that returns the\n * socket reconnect interval, in milliseconds.\n *\n * Defaults to stepped backoff of:\n *\n * ```javascript\n * function(tries){\n *   return [10, 50, 100, 150, 200, 250, 500, 1000, 2000][tries - 1] || 5000\n * }\n * ````\n *\n * @param {Function} [opts.rejoinAfterMs] - The optional function that returns the millisec\n * rejoin interval for individual channels.\n *\n * ```javascript\n * function(tries){\n *   return [1000, 2000, 5000][tries - 1] || 10000\n * }\n * ````\n *\n * @param {Function} [opts.logger] - The optional function for specialized logging, ie:\n *\n * ```javascript\n * function(kind, msg, data) {\n *   console.log(`${kind}: ${msg}`, data)\n * }\n * ```\n *\n * @param {number} [opts.longpollerTimeout] - The maximum timeout of a long poll AJAX request.\n *\n * Defaults to 20s (double the server long poll timer).\n *\n * @param {(Object|function)} [opts.params] - The optional params to pass when connecting\n * @param {string} [opts.authToken] - the optional authentication token to be exposed on the server\n * under the `:auth_token` connect_info key.\n * @param {string} [opts.binaryType] - The binary type to use for binary WebSocket frames.\n *\n * Defaults to \"arraybuffer\"\n *\n * @param {vsn} [opts.vsn] - The serializer's protocol version to send on connect.\n *\n * Defaults to DEFAULT_VSN.\n *\n * @param {Object} [opts.sessionStorage] - An optional Storage compatible object\n * Combo uses sessionStorage for longpoll fallback history. Overriding the store is\n * useful when Combo won't have access to `sessionStorage`. For example, This could\n * happen if a site loads a cross-domain channel in an iframe. Example usage:\n *\n *     class InMemoryStorage {\n *       constructor() { this.storage = {} }\n *       getItem(keyName) { return this.storage[keyName] || null }\n *       removeItem(keyName) { delete this.storage[keyName] }\n *       setItem(keyName, keyValue) { this.storage[keyName] = keyValue }\n *     }\n *\n */\nexport default class Socket {\n  constructor(endPoint, opts = {}) {\n    this.stateChangeCallbacks = { open: [], close: [], error: [], message: [] }\n    this.channels = []\n    this.sendBuffer = []\n    this.ref = 0\n    this.timeout = opts.timeout || DEFAULT_TIMEOUT\n    this.transport = opts.transport || global.WebSocket || LongPoll\n    this.primaryPassedHealthCheck = false\n    this.longPollFallbackMs = opts.longPollFallbackMs\n    this.fallbackTimer = null\n    this.sessionStore = opts.sessionStorage || (global && global.sessionStorage)\n    this.establishedConnections = 0\n    this.defaultEncoder = Serializer.encode.bind(Serializer)\n    this.defaultDecoder = Serializer.decode.bind(Serializer)\n    this.closeWasClean = false\n    this.disconnecting = false\n    this.binaryType = opts.binaryType || 'arraybuffer'\n    this.connectClock = 1\n    if (this.transport !== LongPoll) {\n      this.encode = opts.encode || this.defaultEncoder\n      this.decode = opts.decode || this.defaultDecoder\n    } else {\n      this.encode = this.defaultEncoder\n      this.decode = this.defaultDecoder\n    }\n    let awaitingConnectionOnPageShow = null\n    if (comboWindow && comboWindow.addEventListener) {\n      comboWindow.addEventListener('pagehide', (_e) => {\n        if (this.conn) {\n          this.disconnect()\n          awaitingConnectionOnPageShow = this.connectClock\n        }\n      })\n      comboWindow.addEventListener('pageshow', (_e) => {\n        if (awaitingConnectionOnPageShow === this.connectClock) {\n          awaitingConnectionOnPageShow = null\n          this.connect()\n        }\n      })\n    }\n    this.heartbeatIntervalMs = opts.heartbeatIntervalMs || 30000\n    this.rejoinAfterMs = (tries) => {\n      if (opts.rejoinAfterMs) {\n        return opts.rejoinAfterMs(tries)\n      } else {\n        return [1000, 2000, 5000][tries - 1] || 10000\n      }\n    }\n    this.reconnectAfterMs = (tries) => {\n      if (opts.reconnectAfterMs) {\n        return opts.reconnectAfterMs(tries)\n      } else {\n        return [10, 50, 100, 150, 200, 250, 500, 1000, 2000][tries - 1] || 5000\n      }\n    }\n    this.logger = opts.logger || null\n    if (!this.logger && opts.debug) {\n      this.logger = (kind, msg, data) => {\n        console.log(`${kind}: ${msg}`, data)\n      }\n    }\n    this.longpollerTimeout = opts.longpollerTimeout || 20000\n    this.params = closure(opts.params || {})\n    this.endPoint = `${endPoint}/${TRANSPORTS.websocket}`\n    this.vsn = opts.vsn || DEFAULT_VSN\n    this.heartbeatTimeoutTimer = null\n    this.heartbeatTimer = null\n    this.pendingHeartbeatRef = null\n    this.reconnectTimer = new Timer(() => {\n      this.teardown(() => this.connect())\n    }, this.reconnectAfterMs)\n    this.authToken = opts.authToken\n  }\n\n  /**\n   * Returns the LongPoll transport reference\n   */\n  getLongPollTransport() {\n    return LongPoll\n  }\n\n  /**\n   * Disconnects and replaces the active transport\n   *\n   * @param {Function} newTransport - The new transport class to instantiate\n   *\n   */\n  replaceTransport(newTransport) {\n    this.connectClock++\n    this.closeWasClean = true\n    clearTimeout(this.fallbackTimer)\n    this.reconnectTimer.reset()\n    if (this.conn) {\n      this.conn.close()\n      this.conn = null\n    }\n    this.transport = newTransport\n  }\n\n  /**\n   * Returns the socket protocol\n   *\n   * @returns {string}\n   */\n  protocol() {\n    return location.protocol.match(/^https/) ? 'wss' : 'ws'\n  }\n\n  /**\n   * The fully qualified socket url\n   *\n   * @returns {string}\n   */\n  endPointURL() {\n    let uri = Ajax.appendParams(Ajax.appendParams(this.endPoint, this.params()), {\n      vsn: this.vsn,\n    })\n    if (uri.charAt(0) !== '/') {\n      return uri\n    }\n    if (uri.charAt(1) === '/') {\n      return `${this.protocol()}:${uri}`\n    }\n\n    return `${this.protocol()}://${location.host}${uri}`\n  }\n\n  /**\n   * Disconnects the socket\n   *\n   * See https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes for valid status codes.\n   *\n   * @param {Function} callback - Optional callback which is called after socket is disconnected.\n   * @param {integer} code - A status code for disconnection (Optional).\n   * @param {string} reason - A textual description of the reason to disconnect. (Optional)\n   */\n  disconnect(callback, code, reason) {\n    this.connectClock++\n    this.disconnecting = true\n    this.closeWasClean = true\n    clearTimeout(this.fallbackTimer)\n    this.reconnectTimer.reset()\n    this.teardown(\n      () => {\n        this.disconnecting = false\n        callback && callback()\n      },\n      code,\n      reason,\n    )\n  }\n\n  /**\n   *\n   * @param {Object} params - The params to send when connecting, for example `{user_id: userToken}`\n   *\n   * Passing params to connect is deprecated; pass them in the Socket constructor instead:\n   * `new Socket(\"/socket\", {params: {user_id: userToken}})`.\n   */\n  connect(params) {\n    if (params) {\n      console\n      && console.log(\n        'passing params to connect is deprecated. Instead pass :params to the Socket constructor',\n      )\n      this.params = closure(params)\n    }\n    if (this.conn && !this.disconnecting) {\n      return\n    }\n    if (this.longPollFallbackMs && this.transport !== LongPoll) {\n      this.connectWithFallback(LongPoll, this.longPollFallbackMs)\n    } else {\n      this.transportConnect()\n    }\n  }\n\n  /**\n   * Logs the message. Override `this.logger` for specialized logging. noops by default\n   * @param {string} kind\n   * @param {string} msg\n   * @param {Object} data\n   */\n  log(kind, msg, data) {\n    this.logger && this.logger(kind, msg, data)\n  }\n\n  /**\n   * Returns true if a logger has been set on this socket.\n   */\n  hasLogger() {\n    return this.logger !== null\n  }\n\n  /**\n   * Registers callbacks for connection open events\n   *\n   * @example socket.onOpen(function(){ console.info(\"the socket was opened\") })\n   *\n   * @param {Function} callback\n   */\n  onOpen(callback) {\n    let ref = this.makeRef()\n    this.stateChangeCallbacks.open.push([ref, callback])\n    return ref\n  }\n\n  /**\n   * Registers callbacks for connection close events\n   * @param {Function} callback\n   */\n  onClose(callback) {\n    let ref = this.makeRef()\n    this.stateChangeCallbacks.close.push([ref, callback])\n    return ref\n  }\n\n  /**\n   * Registers callbacks for connection error events\n   *\n   * @example socket.onError(function(error){ alert(\"An error occurred\") })\n   *\n   * @param {Function} callback\n   */\n  onError(callback) {\n    let ref = this.makeRef()\n    this.stateChangeCallbacks.error.push([ref, callback])\n    return ref\n  }\n\n  /**\n   * Registers callbacks for connection message events\n   * @param {Function} callback\n   */\n  onMessage(callback) {\n    let ref = this.makeRef()\n    this.stateChangeCallbacks.message.push([ref, callback])\n    return ref\n  }\n\n  /**\n   * Pings the server and invokes the callback with the RTT in milliseconds\n   * @param {Function} callback\n   *\n   * Returns true if the ping was pushed or false if unable to be pushed.\n   */\n  ping(callback) {\n    if (!this.isConnected()) {\n      return false\n    }\n    let ref = this.makeRef()\n    let startTime = Date.now()\n    this.push({ topic: 'combo', event: 'heartbeat', payload: {}, ref: ref })\n    let onMsgRef = this.onMessage((msg) => {\n      if (msg.ref === ref) {\n        this.off([onMsgRef])\n        callback(Date.now() - startTime)\n      }\n    })\n    return true\n  }\n\n  /**\n   * @private\n   */\n\n  transportConnect() {\n    this.connectClock++\n    this.closeWasClean = false\n    let protocols = undefined\n    // Sec-WebSocket-Protocol based token\n    // (longpoll uses Authorization header instead)\n    if (this.authToken) {\n      protocols = ['combo', `${AUTH_TOKEN_PREFIX}${btoa(this.authToken).replace(/=/g, '')}`]\n    }\n    this.conn = new this.transport(this.endPointURL(), protocols)\n    this.conn.binaryType = this.binaryType\n    this.conn.timeout = this.longpollerTimeout\n    this.conn.onopen = () => this.onConnOpen()\n    this.conn.onerror = error => this.onConnError(error)\n    this.conn.onmessage = event => this.onConnMessage(event)\n    this.conn.onclose = event => this.onConnClose(event)\n  }\n\n  getSession(key) {\n    return this.sessionStore && this.sessionStore.getItem(key)\n  }\n\n  storeSession(key, val) {\n    this.sessionStore && this.sessionStore.setItem(key, val)\n  }\n\n  connectWithFallback(fallbackTransport, fallbackThreshold = 2500) {\n    clearTimeout(this.fallbackTimer)\n    let established = false\n    let primaryTransport = true\n    let openRef, errorRef\n    let fallback = (reason) => {\n      this.log('transport', `falling back to ${fallbackTransport.name}...`, reason)\n      this.off([openRef, errorRef])\n      primaryTransport = false\n      this.replaceTransport(fallbackTransport)\n      this.transportConnect()\n    }\n    if (this.getSession(`phx:fallback:${fallbackTransport.name}`)) {\n      return fallback('memorized')\n    }\n\n    this.fallbackTimer = setTimeout(fallback, fallbackThreshold)\n\n    errorRef = this.onError((reason) => {\n      this.log('transport', 'error', reason)\n      if (primaryTransport && !established) {\n        clearTimeout(this.fallbackTimer)\n        fallback(reason)\n      }\n    })\n    this.onOpen(() => {\n      established = true\n      if (!primaryTransport) {\n        // only memorize LP if we never connected to primary\n        if (!this.primaryPassedHealthCheck) {\n          this.storeSession(`phx:fallback:${fallbackTransport.name}`, 'true')\n        }\n        return this.log('transport', `established ${fallbackTransport.name} fallback`)\n      }\n      // if we've established primary, give the fallback a new period to attempt ping\n      clearTimeout(this.fallbackTimer)\n      this.fallbackTimer = setTimeout(fallback, fallbackThreshold)\n      this.ping((rtt) => {\n        this.log('transport', 'connected to primary after', rtt)\n        this.primaryPassedHealthCheck = true\n        clearTimeout(this.fallbackTimer)\n      })\n    })\n    this.transportConnect()\n  }\n\n  clearHeartbeats() {\n    clearTimeout(this.heartbeatTimer)\n    clearTimeout(this.heartbeatTimeoutTimer)\n  }\n\n  onConnOpen() {\n    if (this.hasLogger())\n      this.log('transport', `${this.transport.name} connected to ${this.endPointURL()}`)\n    this.closeWasClean = false\n    this.disconnecting = false\n    this.establishedConnections++\n    this.flushSendBuffer()\n    this.reconnectTimer.reset()\n    this.resetHeartbeat()\n    this.stateChangeCallbacks.open.forEach(([, callback]) => callback())\n  }\n\n  /**\n   * @private\n   */\n\n  heartbeatTimeout() {\n    if (this.pendingHeartbeatRef) {\n      this.pendingHeartbeatRef = null\n      if (this.hasLogger()) {\n        this.log('transport', 'heartbeat timeout. Attempting to re-establish connection')\n      }\n      this.triggerChanError()\n      this.closeWasClean = false\n      this.teardown(\n        () => this.reconnectTimer.scheduleTimeout(),\n        WS_CLOSE_NORMAL,\n        'heartbeat timeout',\n      )\n    }\n  }\n\n  resetHeartbeat() {\n    if (this.conn && this.conn.skipHeartbeat) {\n      return\n    }\n    this.pendingHeartbeatRef = null\n    this.clearHeartbeats()\n    this.heartbeatTimer = setTimeout(() => this.sendHeartbeat(), this.heartbeatIntervalMs)\n  }\n\n  teardown(callback, code, reason) {\n    if (!this.conn) {\n      return callback && callback()\n    }\n    let connectClock = this.connectClock\n\n    this.waitForBufferDone(() => {\n      if (connectClock !== this.connectClock) {\n        return\n      }\n      if (this.conn) {\n        if (code) {\n          this.conn.close(code, reason || '')\n        } else {\n          this.conn.close()\n        }\n      }\n\n      this.waitForSocketClosed(() => {\n        if (connectClock !== this.connectClock) {\n          return\n        }\n        if (this.conn) {\n          this.conn.onopen = function () {} // noop\n          this.conn.onerror = function () {} // noop\n          this.conn.onmessage = function () {} // noop\n          this.conn.onclose = function () {} // noop\n          this.conn = null\n        }\n\n        callback && callback()\n      })\n    })\n  }\n\n  waitForBufferDone(callback, tries = 1) {\n    if (tries === 5 || !this.conn || !this.conn.bufferedAmount) {\n      callback()\n      return\n    }\n\n    setTimeout(() => {\n      this.waitForBufferDone(callback, tries + 1)\n    }, 150 * tries)\n  }\n\n  waitForSocketClosed(callback, tries = 1) {\n    if (tries === 5 || !this.conn || this.conn.readyState === SOCKET_STATES.closed) {\n      callback()\n      return\n    }\n\n    setTimeout(() => {\n      this.waitForSocketClosed(callback, tries + 1)\n    }, 150 * tries)\n  }\n\n  onConnClose(event) {\n    let closeCode = event && event.code\n    if (this.hasLogger()) this.log('transport', 'close', event)\n    this.triggerChanError()\n    this.clearHeartbeats()\n    if (!this.closeWasClean && closeCode !== 1000) {\n      this.reconnectTimer.scheduleTimeout()\n    }\n    this.stateChangeCallbacks.close.forEach(([, callback]) => callback(event))\n  }\n\n  /**\n   * @private\n   */\n  onConnError(error) {\n    if (this.hasLogger()) this.log('transport', error)\n    let transportBefore = this.transport\n    let establishedBefore = this.establishedConnections\n    this.stateChangeCallbacks.error.forEach(([, callback]) => {\n      callback(error, transportBefore, establishedBefore)\n    })\n    if (transportBefore === this.transport || establishedBefore > 0) {\n      this.triggerChanError()\n    }\n  }\n\n  /**\n   * @private\n   */\n  triggerChanError() {\n    this.channels.forEach((channel) => {\n      if (!(channel.isErrored() || channel.isLeaving() || channel.isClosed())) {\n        channel.trigger(CHANNEL_EVENTS.error)\n      }\n    })\n  }\n\n  /**\n   * @returns {string}\n   */\n  connectionState() {\n    switch (this.conn && this.conn.readyState) {\n      case SOCKET_STATES.connecting:\n        return 'connecting'\n      case SOCKET_STATES.open:\n        return 'open'\n      case SOCKET_STATES.closing:\n        return 'closing'\n      default:\n        return 'closed'\n    }\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  isConnected() {\n    return this.connectionState() === 'open'\n  }\n\n  /**\n   * @private\n   *\n   * @param {Channel}\n   */\n  remove(channel) {\n    this.off(channel.stateChangeRefs)\n    this.channels = this.channels.filter(c => c !== channel)\n  }\n\n  /**\n   * Removes `onOpen`, `onClose`, `onError,` and `onMessage` registrations.\n   *\n   * @param {refs} - list of refs returned by calls to\n   *                 `onOpen`, `onClose`, `onError,` and `onMessage`\n   */\n  off(refs) {\n    for (let key in this.stateChangeCallbacks) {\n      this.stateChangeCallbacks[key] = this.stateChangeCallbacks[key].filter(([ref]) => {\n        return refs.indexOf(ref) === -1\n      })\n    }\n  }\n\n  /**\n   * Initiates a new channel for the given topic\n   *\n   * @param {string} topic\n   * @param {Object} chanParams - Parameters for the channel\n   * @returns {Channel}\n   */\n  channel(topic, chanParams = {}) {\n    let chan = new Channel(topic, chanParams, this)\n    this.channels.push(chan)\n    return chan\n  }\n\n  /**\n   * @param {Object} data\n   */\n  push(data) {\n    if (this.hasLogger()) {\n      let { topic, event, payload, ref, join_ref } = data\n      this.log('push', `${topic} ${event} (${join_ref}, ${ref})`, payload)\n    }\n\n    if (this.isConnected()) {\n      this.encode(data, result => this.conn.send(result))\n    } else {\n      this.sendBuffer.push(() => this.encode(data, result => this.conn.send(result)))\n    }\n  }\n\n  /**\n   * Return the next message ref, accounting for overflows\n   * @returns {string}\n   */\n  makeRef() {\n    let newRef = this.ref + 1\n    if (newRef === this.ref) {\n      this.ref = 0\n    } else {\n      this.ref = newRef\n    }\n\n    return this.ref.toString()\n  }\n\n  sendHeartbeat() {\n    if (this.pendingHeartbeatRef && !this.isConnected()) {\n      return\n    }\n    this.pendingHeartbeatRef = this.makeRef()\n    this.push({\n      topic: 'combo',\n      event: 'heartbeat',\n      payload: {},\n      ref: this.pendingHeartbeatRef,\n    })\n    this.heartbeatTimeoutTimer = setTimeout(\n      () => this.heartbeatTimeout(),\n      this.heartbeatIntervalMs,\n    )\n  }\n\n  flushSendBuffer() {\n    if (this.isConnected() && this.sendBuffer.length > 0) {\n      this.sendBuffer.forEach(callback => callback())\n      this.sendBuffer = []\n    }\n  }\n\n  onConnMessage(rawMessage) {\n    this.decode(rawMessage.data, (msg) => {\n      let { topic, event, payload, ref, join_ref } = msg\n      if (ref && ref === this.pendingHeartbeatRef) {\n        this.clearHeartbeats()\n        this.pendingHeartbeatRef = null\n        this.heartbeatTimer = setTimeout(() => this.sendHeartbeat(), this.heartbeatIntervalMs)\n      }\n\n      if (this.hasLogger())\n        this.log(\n          'receive',\n          `${payload.status || ''} ${topic} ${event} ${(ref && '(' + ref + ')') || ''}`,\n          payload,\n        )\n\n      for (let i = 0; i < this.channels.length; i++) {\n        const channel = this.channels[i]\n        if (!channel.isMember(topic, event, payload, join_ref)) {\n          continue\n        }\n        channel.trigger(event, payload, ref, join_ref)\n      }\n\n      for (let i = 0; i < this.stateChangeCallbacks.message.length; i++) {\n        let [, callback] = this.stateChangeCallbacks.message[i]\n        callback(msg)\n      }\n    })\n  }\n\n  leaveOpenTopic(topic) {\n    let dupChannel = this.channels.find(\n      c => c.topic === topic && (c.isJoined() || c.isJoining()),\n    )\n    if (dupChannel) {\n      if (this.hasLogger()) this.log('transport', `leaving duplicate topic \"${topic}\"`)\n      dupChannel.leave()\n    }\n  }\n}\n"],
  "mappings": "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",
  "names": ["require_lodash", "__commonJSMin", "exports", "module", "FUNC_ERROR_TEXT", "NAN", "symbolTag", "reTrim", "reIsBadHex", "reIsBinary", "reIsOctal", "freeParseInt", "freeGlobal", "freeSelf", "root", "objectProto", "objectToString", "nativeMax", "nativeMin", "now", "debounce", "func", "wait", "options", "lastArgs", "lastThis", "maxWait", "result", "timerId", "lastCallTime", "lastInvokeTime", "leading", "maxing", "trailing", "toNumber", "isObject", "invokeFunc", "time", "args", "thisArg", "leadingEdge", "timerExpired", "remainingWait", "timeSinceLastCall", "timeSinceLastInvoke", "shouldInvoke", "trailingEdge", "cancel", "flush", "debounced", "isInvoking", "value", "type", "isObjectLike", "isSymbol", "other", "isBinary", "live_reloader_exports", "__export", "live_reloader_default", "globalSelf", "comboWindow", "global", "DEFAULT_VSN", "SOCKET_STATES", "DEFAULT_TIMEOUT", "WS_CLOSE_NORMAL", "CHANNEL_STATES", "CHANNEL_EVENTS", "TRANSPORTS", "XHR_STATES", "AUTH_TOKEN_PREFIX", "closure", "value", "Ajax", "method", "endPoint", "headers", "body", "timeout", "ontimeout", "callback", "global", "req", "options", "controller", "_timeoutId", "response", "data", "err", "key", "value", "XHR_STATES", "resp", "e", "obj", "parentKey", "queryStr", "paramKey", "paramVal", "url", "params", "prefix", "Push", "channel", "event", "payload", "timeout", "status", "callback", "response", "_ref", "h", "Timer", "callback", "timerCalc", "Channel", "topic", "params", "socket", "CHANNEL_STATES", "closure", "Push", "CHANNEL_EVENTS", "Timer", "pushEvent", "reason", "payload", "ref", "timeout", "callback", "event", "bind", "onClose", "leavePush", "_event", "_ref", "joinRef", "handledPayload", "eventBindings", "i", "arrayBufferToBase64", "buffer", "binary", "bytes", "len", "i", "LongPoll", "endPoint", "protocols", "AUTH_TOKEN_PREFIX", "SOCKET_STATES", "TRANSPORTS", "Ajax", "code", "reason", "wasClean", "headers", "resp", "status", "token", "messages", "msg", "body", "req", "opts", "method", "onCallerTimeout", "callback", "ontimeout", "serializer_default", "msg", "callback", "payload", "rawPayload", "join_ref", "ref", "topic", "event", "message", "metaLength", "header", "view", "offset", "char", "combined", "buffer", "kind", "decoder", "joinRefSize", "topicSize", "eventSize", "joinRef", "data", "refSize", "CHANNEL_EVENTS", "Socket", "endPoint", "opts", "DEFAULT_TIMEOUT", "global", "LongPoll", "serializer_default", "awaitingConnectionOnPageShow", "comboWindow", "_e", "tries", "kind", "msg", "data", "closure", "TRANSPORTS", "DEFAULT_VSN", "Timer", "newTransport", "uri", "Ajax", "callback", "code", "reason", "params", "ref", "startTime", "onMsgRef", "protocols", "AUTH_TOKEN_PREFIX", "error", "event", "key", "val", "fallbackTransport", "fallbackThreshold", "established", "primaryTransport", "openRef", "errorRef", "fallback", "rtt", "WS_CLOSE_NORMAL", "connectClock", "SOCKET_STATES", "closeCode", "transportBefore", "establishedBefore", "channel", "CHANNEL_EVENTS", "c", "refs", "topic", "chanParams", "chan", "Channel", "payload", "join_ref", "result", "newRef", "rawMessage", "i", "dupChannel", "import_lodash", "getFreshUrl", "url", "date", "cleanUrl", "buildFreshImportUrl", "style", "newStyle", "onComplete", "freshCSS", "match", "freshUrl", "buildFreshLinkUrl", "link", "newLink", "repaint", "buildReloadStrategies", "targetWindow", "fullReloadOnCssChanges", "fullReloadTargetWindow", "reloadableLinkElements", "reloadablestyles", "LiveReloader", "path", "debounceTime", "Socket", "debounce", "msg", "type", "finalReloadStrategy", "acc", "current", "reload_type", "reload_fun", "live_reloader_default"]
}
